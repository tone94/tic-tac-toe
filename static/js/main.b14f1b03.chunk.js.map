{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","handleClick","state","xIsNext","stepNumber","history","slice","length","calculateWinner","setState","concat","jumpTo","move","Array","fill","status","this","current","winner","moves","map","step","desc","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAMA,SAASA,EAAOC,GACd,OACE,wBACEC,UAAU,SACVC,QAASF,EAAME,QAFjB,SAIGF,EAAMG,QAKb,SAASC,EAAMJ,GAEb,SAASK,EAAaC,GACpB,OAAO,cAACP,EAAD,CACLI,MAAOH,EAAMO,QAAQD,GACrBJ,QAAS,kBAAMF,EAAME,QAAQI,MAIjC,OACE,gCACE,sBAAKL,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,S,IAMhBG,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAURS,YAAc,SAACH,GAAO,IAAD,EACa,EAAKI,MAA7BC,EADW,EACXA,QAASC,EADE,EACFA,WACXC,EAAU,EAAKH,MAAMG,QAAQC,MAAM,EAAGF,EAAa,GACrDL,EAAUM,EAAQA,EAAQE,OAAS,GAAGR,QAAQO,QAC9CE,EAAgBT,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKK,EAAU,IAAM,IAC7B,EAAKM,SAAS,CACZJ,QAASA,EAAQK,OAAO,CAAC,CAAEX,QAASA,KACpCI,SAAUA,EACVC,WAAYC,EAAQE,WAtBL,EA0BnBI,OAAS,SAACC,GACR,EAAKH,SAAS,CACZL,WAAYQ,EACZT,QAAUS,EAAO,IAAO,KA3B1B,EAAKV,MAAQ,CACXG,QAAS,CAAC,CACRN,QAASc,MAAM,GAAGC,KAAK,QAEzBX,SAAS,EACTC,WAAY,GAPG,E,0CAiCnB,WAAU,IAcJW,EAdG,SACkCC,KAAKd,MAAtCG,EADD,EACCA,QAASF,EADV,EACUA,QACXc,EAAUZ,EAFT,EACmBD,YAEpBc,EAASV,EAAgBS,EAAQlB,SAEjCoB,EAAQd,EAAQe,KAAI,SAACC,EAAMT,GAC/B,IAAMU,EAAOV,EAAO,eAAiBA,EAAO,mBAC5C,OACE,6BACE,wBAAQlB,QAAS,kBAAM,EAAKiB,OAAOC,IAAnC,SAA2CU,KADpCV,MAab,OALEG,EADEG,EACO,WAAaA,EAEb,iBAAmBf,EAAU,IAAM,KAI5C,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CAAOG,QAASkB,EAAQlB,QAASL,QAASsB,KAAKf,gBAEjD,sBAAKR,UAAU,YAAf,UACE,8BAAMsB,IACN,6BACGI,c,GA/DMI,IAAMC,WA8EzB,SAAShB,EAAgBT,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMlB,OAAQT,IAAK,CAAC,IAAD,cACnB2B,EAAM3B,GADa,GAC9B4B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAtBTG,IAASC,OACP,cAAC9B,EAAD,IACA+B,SAASC,eAAe,W","file":"static/js/main.b14f1b03.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { produce } from 'immer'\r\n\r\n// Square 和 Board 都是受控组件\r\nfunction Square(props) {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      onClick={props.onClick}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Board(props) {\r\n\r\n  function renderSquare(i) {\r\n    return <Square\r\n      value={props.squares[i]}\r\n      onClick={() => props.onClick(i)}\r\n    />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(0)}\r\n        {renderSquare(1)}\r\n        {renderSquare(2)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(3)}\r\n        {renderSquare(4)}\r\n        {renderSquare(5)}\r\n      </div>\r\n      <div className=\"board-row\">\r\n        {renderSquare(6)}\r\n        {renderSquare(7)}\r\n        {renderSquare(8)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      history: [{\r\n        squares: Array(9).fill(null),\r\n      }],\r\n      xIsNext: true,\r\n      stepNumber: 0,\r\n    }\r\n  }\r\n\r\n  handleClick = (i) => {\r\n    const { xIsNext, stepNumber } = this.state\r\n    const history = this.state.history.slice(0, stepNumber + 1)\r\n    let squares = history[history.length - 1].squares.slice()\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return\r\n    }\r\n    squares[i] = xIsNext ? 'X' : 'O'\r\n    this.setState({\r\n      history: history.concat([{ squares: squares }]),\r\n      xIsNext: !xIsNext,\r\n      stepNumber: history.length,\r\n    })\r\n  }\r\n\r\n  jumpTo = (move) => {\r\n    this.setState({\r\n      stepNumber: move,\r\n      xIsNext: (move % 2) === 0,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { history, xIsNext, stepNumber } = this.state\r\n    const current = history[stepNumber]\r\n    const winner = calculateWinner(current.squares);\r\n\r\n    const moves = history.map((step, move) => {\r\n      const desc = move ? 'Go to move #' + move : 'Go to game start'\r\n      return (\r\n        <li key={move}>\r\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board squares={current.squares} onClick={this.handleClick} />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>\r\n            {moves}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}